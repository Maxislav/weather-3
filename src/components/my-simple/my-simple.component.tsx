import { Component } from "react";interface MyTestState {    a: number,    b: number,    arr: number[]}export class MySimpleComponent extends Component<any, MyTestState> {    constructor(props: any) {        super(props);        this.state = {            a: 1,            b: 2,            arr: []        }    }    myClick =() => {        this.setState({            ...this.state,            a: this.state.a+1,            arr: [...this.state.arr, this.state.a]        })    }    componentWillReceiveProps(){    }    componentDidMount() {        console.log('componentDidMount')    }    componentDidUpdate(){        console.log('componentDidUpdate')    }    shouldComponentUpdate(a: any, b: MyTestState, c: any) {        console.log('shouldComponentUpdate')        if(b.a ==2){            return false        }        return true    }    render() {        return <>            <h1>                MySimple component</h1>            <div>               a:  {this.state.a}            </div>            <div>               b:  {this.state.b}            </div>            <ul>                {this.state.arr.map((it, i) => <li key={i}>{it}</li>)}            </ul>            <div>                <button onClick={this.myClick}>                    click                </button>            </div>        </>;    }}