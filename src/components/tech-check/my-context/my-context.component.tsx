import { Component, Context, createContext, useContext } from "react";const ThemeContext = createContext('light');function Toolbar() {    const themeContext = useContext(ThemeContext)    return (        <div>            <h4>                toolbar {themeContext}            </h4>            <ThemedButton />        </div>    );}class ThemedButton extends Component<any, any> {    static contextType: Context<string> = ThemeContext;    render() {        const context  = this.context as string        return <div>            ThemedButton   {context}        </div>;    }}export const MyContextComponent = () => {    return <>        <div className={'flex-row'}>            <div className={'pre-wrap'}>                {`const ThemeContext = createContext('light');class App extends React.Component {  render() {    return (      <ThemeContext.Provider value="dark">        <Toolbar />      </ThemeContext.Provider>    );  }}function Toolbar() {    const themeContext = useContext(ThemeContext)    return (        <div>            <h4>                toolbar {themeContext}            </h4>            <ThemedButton />        </div>    );}class ThemedButton extends Component<any, any> {    static contextType: Context<string> = ThemeContext;    render() {        const context  = this.context as string        return <div>            ThemedButton   {context}        </div>;    }}`                }            </div>            <div>                <ThemeContext.Provider value="dark">                    <Toolbar/>                </ThemeContext.Provider>            </div>        </div>    </>}