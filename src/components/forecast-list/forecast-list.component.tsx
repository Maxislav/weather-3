import { useEffect, useRef, useState } from "react";import styles from './forecast-list.component.less';import axios from 'axios';import { OpenweathermapItem } from "../../interfaces/openweathermap";import { ForecastListItemComponent } from "../forecast-list-item/forecast-list-item.component";import tinyscrollbar from '../../lib/tinyscrollbar.js';console.log(tinyscrollbar)export function ForecastListComponent() {    const child1 = useRef(null);    const [items, setState] = useState<OpenweathermapItem[]>([])    useEffect(() => {        axios.get<string>('https://api.openweathermap.org/data/2.5/forecast?id=703448&units=metric&mode=json&APPID=19e738728f18421f2074f369bdb54e81&callback=_jsonpvai3l1w22cg')            .then((d) => {                const m = d.data.match(/\(.+\)/)[0].replace(/^\(/, '').replace(/\)$/, '')                return JSON.parse(m) as { list: OpenweathermapItem[] }            })            .then(({ list }: { list: OpenweathermapItem[] }) => {                setState(list)                //console.log(child1)                const d = tinyscrollbar as any                setTimeout(() => {                    const scrollEl =  d(child1.current, {axis: "x"});                }, 500)               // (tinyscrollbar as any)(child1, {axis: "x"})               // console.log(list)            })            .catch(e => {                console.log(e)            })    }, [])    const getForecastListItems = (items: OpenweathermapItem[]) => {        return items            .map((it, index) => {                return <ForecastListItemComponent key={ 'key_' + index } data={ it }>item</ForecastListItemComponent>            })    }   const idd = 'scrollbar1'    return (        <div id={idd} ref={child1} className='forecast-component'>            <div className='scrollbar'>                <div className='track'>                    <div className='thumb'>                        <div className='end'>                        </div>                    </div>                </div>            </div>            <div className={'viewport '+styles.viewport}>                <div className='overview'>                    <div  className={ styles.list }>                        { getForecastListItems(items) }                    </div>                </div>            </div>        </div>    )}